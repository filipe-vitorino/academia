name: Flutter CI/CD

on:
  push:
    branches:
      - master   # Ou a branch que você usa
  pull_request:
    branches:
      - master

jobs:
  # Job 1: Roda testes rápidos (unitários e de widget) em todas as plataformas
  unit_and_widget_tests:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3' # Sua versão do Flutter
          cache: true # Habilita o cache para acelerar os builds

      - name: Get dependencies
        run: flutter pub get

      - name: Run unit and widget tests
        run: flutter test

  # Job 2: Roda os testes de integração (E2E) em um emulador Android
  integration_tests:
    needs: unit_and_widget_tests 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3' # Adapte se necessário
          cache: true

      - name: Get dependencies
        run: flutter pub get
      
      - name: Run integration tests on Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          # --- Configuração de Alta Estabilidade ---
          api-level: 29
          target: default
          arch: x86_64
          ram-size: 1536m
          enable-hw-acceleration: false
          emulator-boot-timeout: 600
          
          # --- Script a ser executado ---
          script: flutter test integration_test
